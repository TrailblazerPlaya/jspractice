const postData = async (url, data) => { //async для того, чтобы наша функция сначала получила ответ от сервера и потом все пошло поехало, иначе будет ошибка(хуй знает как я это запомню все)
    const res = await fetch(url, { //await ставится перет теми операторами, которые нам необходимо дождаться
        method: "POST",
        headers: {
            'Content-type': 'application/json'
        },
        body: data
    });
    return await res.json(); //и тут тоже ждем
};

 //ПОЛУЧАЕМ ДАННЫЕ ИЗ БАЗЫ ДАННЫХ И ПОСТИМ КАРТОЧКИ НА САЙТЕ
const getResource = async (url) => { //объекта с настройками(data) уже не будет, так как я ничего не отправляю на сервер, я просто получаю
    const res = await fetch(url); //нужно помнить, что fetch если столкнется с какой-то ошибкой в http запросе, не выдаст catch(фэил окно)(404, 505 и тд), ошибкой для него является только отсутствие интернета и это нужно исправить руками 
    if (!res.ok) { //короче это штука работает с промисами, полученными из фетча(если все ок, то все ок, а если не ок, то не ок)
        throw new Error(`Could not ferch ${url}, status: ${res.status}`); //выкидываем новую ошибку
    }
    return await res.json();
};

export {postData};    
export {getResource};